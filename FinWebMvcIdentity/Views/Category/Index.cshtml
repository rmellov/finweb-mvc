@using X.PagedList;
@using X.PagedList.Mvc.Core;

@model IPagedList<FinWebMvcIdentity.Models.Category>

@{
    ViewData["Title"] = "Categoria";
}

<br />

@if (TempData["AlertMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        <strong>Alerta:</strong> @TempData["AlertMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>
    <script>
        setTimeout(function() {
            var alert = document.querySelector('.alert');
            if (alert) {
                alert.classList.remove('show');
                alert.classList.add('fade');
                setTimeout(function() {
                    alert.remove();
                }, 150); 
            }
        }, 5000); 
    </script>
}

<div class="card text-center">
    <h1>Categorias</h1>
</div>
<br />

<table class="table table-striped table-hover text-center">
    <thead class="table-dark">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Type)
            </th>
            <th>Editar/Excluir</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Type)
                </td>
                <td>
                    <a class="btn btn-link" asp-action="Edit" asp-route-id="@item.Id">
                        <i class="bi bi-pencil-square"></i>
                    </a>
                    <a class="btn btn-link" asp-action="Delete" asp-route-id="@item.Id">
                        <i class="bi bi-trash-fill"></i>
                    </a>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center">
    <div class="text-center flex-grow-1">
        @Html.PagedListPager(Model, page => Url.Action("Index", new { page }), new PagedListRenderOptions
   {
       LiElementClasses = new[] { "page-item" },
       PageClasses = new[] { "page-link" },
       ContainerDivClasses = new[] { "pagination", "justify-content-center" }
   })
    </div>
    <p class="mb-0">
        <a class="btn btn-dark" asp-action="Create">Nova Categoria</a>
    </p>
</div>
