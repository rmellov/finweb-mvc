@using FinWebMvcIdentity.Models.ViewModel;

@{
    ViewData["Title"] = "Dashboard";

    var expenseRecordsByCategory = Model.ExpenseRecordsByCategory;
}

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<br />

@if (!User.Identity.IsAuthenticated)
{
    <div class="p-5 mb-4 bg-light rounded-3">
        <div class="container-fluid py-5">
            <h1 class="display-5 fw-bold">Finweb - Controle Financeiro</h1>
            <p class="col-md-12 fs-4">Um sistema de controle financeiro ajuda a manter as finanças organizadas, otimiza o orçamento e facilita a tomada de decisões. Crie uma conta agora mesmo e comece a controlar suas finanças</p>
            <a class="btn btn-primary btn-lg" asp-area="Identity" asp-page="/Account/Register">Começar Grátis</a>
            <a class="btn btn-info btn-lg" asp-area="Identity" asp-page="/Account/Login">Já é usuário? Faça o login</a>
        </div>
    </div>
}
else
{
   <div class="container">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    Despesas por Categoria
                </div>
                <div class="card-body">
                    <canvas id="expenseRecordsByCategoryChart" width="400" height="400"></canvas>
                </div>
            </div>
        </div>
   </div>
}

<script>
    var categoryCtx = document.getElementById('expenseRecordsByCategoryChart').getContext('2d');
    var categoryChart = new Chart(categoryCtx, {
        type: 'pie',
        data: {
            labels: @Html.Raw(Json.Serialize(expenseRecordsByCategory.Keys)),
            datasets: [{
                label: 'Valores por Categoria',
                data: @Html.Raw(Json.Serialize(expenseRecordsByCategory.Values)),
                backgroundColor: [
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)'
                ],
                borderColor: [
                    'rgba(75, 192, 192, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(255, 99, 132, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)'
                ],
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            maintainAspectRatio: false,
            plugins: {
                legend: {
                    position: 'top',
                },
                tooltip: {
                    enabled: true
                }
            }
        }
    });
</script>